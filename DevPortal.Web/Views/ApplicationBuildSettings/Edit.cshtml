@model ApplicationBuildSettingsViewModel
@{
    ViewData[ViewDataNames.Title] = "Uygulama Derleme Ayarları";
    ViewBag.BreadCrumb = Model.BreadCrumbViewModel;
}

<h1 class="title-primary display-4">Uygulama Derleme Ayarları</h1>
<div class="d-flex flex-lg-row flex-column-reverse justify-content-between">
    <h3>@Model.ApplicationName</h3>
    <div class="mb-3 mb-lg-0">
        <button class="btn btn-simple btn-sm hover-info" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="<b>Son güncelleme: </b>@Model.BuildSettings.RecordUpdateInfo.ModifiedDate - @Model.BuildSettings.RecordUpdateInfo.ModifiedUserEmail<br><b>Oluşturma: </b>@Model.BuildSettings.RecordUpdateInfo.CreatedDate - @Model.BuildSettings.RecordUpdateInfo.CreatedUserEmail">
            <i class="far fa-clock" aria-hidden="true"></i> Tarih Bilgisi
        </button>
    </div>
</div>

@using (Html.BeginForm(BaseActionNames.Edit, ControllerNames.ApplicationBuildSettings, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.BuildSettings.ApplicationId, new { name = "applicationId", id = "applicationId" });

    <blockquote class="blockquote mt-4">
        Genel Ayarlar
    </blockquote>
    <hr />
    <div class="row">
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.Workspace, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.Workspace, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.Workspace)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.SolutionName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.SolutionName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.SolutionName)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.ProjectName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.ProjectName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.ProjectName)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.DeployPath, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.DeployPath, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.DeployPath)
        </div>
    </div>

    <blockquote class="blockquote mt-4">
        Yayınlama Profilleri
    </blockquote>
    <hr />
    <div class="row">
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.DevPublishProfileName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.DevPublishProfileName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.DevPublishProfileName)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.TestPublishProfileName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.TestPublishProfileName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.TestPublishProfileName)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.PreProdPublishProfileName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.PreProdPublishProfileName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.PreProdPublishProfileName)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.ProdPublishProfileName, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.ProdPublishProfileName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.ProdPublishProfileName)
        </div>
    </div>

    <blockquote class="blockquote mt-4">
        Dizin Adresleri
    </blockquote>
    <hr />
    <div class="row">
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.DevRemoteAddress, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.DevRemoteAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.DevRemoteAddress)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.TestRemoteAddress, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.TestRemoteAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.TestRemoteAddress)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.PreProdRemoteAddress, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.PreProdRemoteAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.PreProdRemoteAddress)
        </div>
        <div class="form-group col-6">
            @Html.LabelFor(x => x.BuildSettings.ProdRemoteAddress, new { @class = "col-form-label" })
            @Html.TextBoxFor(x => x.BuildSettings.ProdRemoteAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BuildSettings.ProdRemoteAddress)
        </div>
    </div>

    <div class="py-3">
        <button id="btnSaved" type="submit" class="btn btn-success">@ButtonTextNames.Update</button>
    </div>
}