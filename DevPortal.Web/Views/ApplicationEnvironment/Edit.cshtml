@model ApplicationEnvironmentViewModel
@{
    ViewData[ViewDataNames.Title] = "Uygulama Ortamı Güncelleme";
    ViewBag.BreadCrumb = Model.BreadCrumbViewModel;
}

<h1 class="title-primary display-4">Uygulama Ortam Bilgisi Güncelleme</h1>
@using (Html.BeginForm(ApplicationEnvironmentControllerActionNames.Edit, ControllerNames.ApplicationEnvironment, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ApplicationEnvironment.ApplicationId, new { name = "applicationId", id = "applicationId" })
    @Html.HiddenFor(x => x.ApplicationEnvironment.Id)

    <div class="row">
        <div class="col-md-12">
            <div class="d-flex flex-lg-row flex-column-reverse justify-content-between">
                <h3>@Model.ApplicationEnvironment.ApplicationName</h3>
                <div class="mb-3 mb-lg-0">
                    <button class="btn btn-simple btn-sm hover-info" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="<b>Son güncelleme: </b>@Model.ApplicationEnvironment.RecordUpdateInfo.ModifiedDate - @Model.ApplicationEnvironment.RecordUpdateInfo.ModifiedUserEmail<br><b>Oluşturma: </b>@Model.ApplicationEnvironment.RecordUpdateInfo.CreatedDate - @Model.ApplicationEnvironment.RecordUpdateInfo.CreatedUserEmail"><i class="far fa-clock" aria-hidden="true"></i> Tarih Bilgisi</button>
                </div>
            </div>
            @if (Model.EnvironmentList.Count > 0)
            {
                <div class="form-group col-3 p-0">
                    @Html.LabelFor(x => x.ApplicationEnvironment.EnvironmentId, new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.ApplicationEnvironment.EnvironmentId, new SelectList(Model.EnvironmentList, DropdownItemValue.Id, DropdownItemValue.Name), "Ortam Seçiniz", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ApplicationEnvironment.EnvironmentId)
                </div>
                <div class="form-group col-10 p-0">
                    @Html.LabelFor(x => x.ApplicationEnvironment.Url, new { @class = "col-form-label" })
                    <div class="position-relative">
                        @Html.TextBoxFor(x => x.ApplicationEnvironment.Url, new { @class = "form-control" })
                        <button type="button" class="btn btn-white btn-sm" data-toggle="tooltip" data-html="true" title="http://mxhalkbankdev.activebuilder.local">
                            <i class="fa fa-info-circle" aria-hidden="true"></i>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(m => m.ApplicationEnvironment.Url)
                </div>
                <div class="form-group col-10 p-0">
                    @Html.LabelFor(x => x.ApplicationEnvironment.PhysicalPath, new { @class = "col-form-label" })
                    <div class="position-relative">
                        @Html.TextBoxFor(x => x.ApplicationEnvironment.PhysicalPath, new { @class = "form-control" })
                        <button type="button" class="btn btn-white btn-sm" data-toggle="tooltip" data-html="true" title="\\VENUS\Web\mxhalkbankdev.activebuilder.local\">
                            <i class="fa fa-info-circle" aria-hidden="true"></i>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(m => m.ApplicationEnvironment.PhysicalPath)
                </div>
                <div class="form-group col-10 p-0">
                    @Html.LabelFor(x => x.ApplicationEnvironment.HasLog, new { @class = "col-form-label" })<br />
                    <div class="custom-control custom-radio custom-control-inline">
                        @Html.RadioButtonFor(m => m.ApplicationEnvironment.HasLog, "false", new { @class = "custom-control-input", id = "defaultInline1", @checked = "checked" })
                        <label class="custom-control-label" for="defaultInline1">Görüntülenemez</label>
                    </div>
                    <div class="custom-control custom-radio custom-control-inline">
                        @Html.RadioButtonFor(m => m.ApplicationEnvironment.HasLog, "true", new { @class = "custom-control-input", id = "defaultInline2" })
                        <label class="custom-control-label" for="defaultInline2">Görüntülenebilir</label>
                    </div>
                </div>
                <div class="form-group col-10 p-0">
                    @Html.LabelFor(x => x.ApplicationEnvironment.LogFilePath, new { @class = "col-form-label" })
                    <div class="position-relative">
                        @Html.TextBoxFor(x => x.ApplicationEnvironment.LogFilePath, new { @class = "form-control" })
                        <button type="button" class="btn btn-white btn-sm" data-toggle="tooltip" data-html="true" title="\\AbLogSrv-01\LOG\WEB\DEV\mxhalkbankdev.activebuilder.local\">
                            <i class="fa fa-info-circle" aria-hidden="true"></i>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(m => m.ApplicationEnvironment.LogFilePath)
                </div>
                <div class="py-3">
                    <button id="btnSaved" type="submit" class="btn btn-success">Güncelle</button>
                </div>
            }
            else
            {
                <label class="text-danger">Eklenecek ortam bilgisi yoktur.</label>
            }
        </div>
    </div>
}