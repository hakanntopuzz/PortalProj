@model DatabaseViewModel
@{
    ViewData[ViewDataNames.Title] = "Veritabanı Bilgileri";
    ViewBag.BreadCrumb = Model.BreadCrumbViewModel;
}
<h1 class="title-primary display-4">Veritabanı Bilgileri</h1>
@Html.HiddenFor(x => x.Database.Id, new { name = "databaseId", id = "databaseId" })
@Html.HiddenFor(x => x.Database.DatabaseTypeId, new { name = "databaseTypeId", id = "databaseTypeId" })
@Html.HiddenFor(x => x.Database.Name, new { name = "favouritePageName", id = "favouritePageName" })
<input type="hidden" id="favouriteId" />

<div class="card">
    <div class="card-body">
        <div class="d-flex flex-lg-row flex-column-reverse justify-content-between">
            <h3>@Model.Database.Name</h3>
            <div class="mb-3 mb-lg-0">
                <button class="btn btn-simple btn-sm hover-action" id="addFavourite"><i class="fa fa-star" aria-hidden="true"></i> Favorilerime Ekle</button>
                <button class="btn btn-simple btn-sm hover-action active" id="deleteFavourite"><i class="fa fa-star" aria-hidden="true"></i> Favorilerimden Çıkar</button>
                @if (Model.IsAuthorized)
                {
                    <a class="btn btn-simple btn-sm hover-success" href="@Url.Action(DatabaseControllerActionNames.Edit, ControllerNames.Database, new { id = Model.Database.Id })">
                        <i class="far fa-edit" aria-hidden="true"></i> @ButtonTextNames.Edit
                    </a>
                    <button class="btn btn-simple btn-sm hover-danger" id="deleteDatabase"><i class="fa fa-trash-alt" aria-hidden="true"></i> Sil</button>
                    <button class="btn btn-simple btn-sm hover-info" id="showAudit"><i class="fa fa-history" aria-hidden="true"></i> Değişiklik Geçmişi</button>
                }
                <button class="btn btn-simple btn-sm hover-info" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="<b>Son güncelleme: </b>@Model.Database.RecordUpdateInfo.ModifiedDate - @Model.Database.RecordUpdateInfo.ModifiedUserEmail<br><b>Oluşturma: </b>@Model.Database.RecordUpdateInfo.CreatedDate - @Model.Database.RecordUpdateInfo.CreatedUserEmail"><i class="far fa-clock" aria-hidden="true"></i> Tarih Bilgisi</button>
            </div>
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item pl-0">
                <strong>Veritabanı Grubu : </strong>
                <span>@Model.Database.DatabaseGroupName</span>
            </li>
            <li class="list-group-item pl-0">
                <strong>Veritabanı Tipi : </strong>
                <span>@Model.Database.DatabaseTypeName</span>
            </li>
            <li class="list-group-item pl-0">
                <strong>Redmine : </strong>
                <a href="@Model.Database.RedmineProjectUrl" target="_blank">
                    <span>@Model.Database.RedmineProjectUrl</span>
                </a>
            </li>
            <li class="list-group-item pl-0">
                <strong>Açıklama : </strong>
                <span>@Model.Database.Description</span>
            </li>
        </ul>
    </div>
</div>

@await Component.InvokeAsync("Audit", new { tableName = "Database", recordId = Model.Database.Id })

@section Scripts{
    <script src="~/js/databaseDetail.js"></script>
    <script src="~/bundles/js/favourite.min.js" asp-append-version="true"></script>
}