@model EditMenuViewModel
@{
    ViewData[ViewDataNames.Title] = "Yeni Menü";
    ViewBag.BreadCrumb = Model.BreadCrumbViewModel;
}
<h1 class="title-primary display-4">Menü Güncelle</h1>
<div class="d-flex flex-lg-row flex-column-reverse justify-content-between">
    <h3>@Model.Menu.Name</h3>
    <div class="mb-3 mb-lg-0">
        <button class="btn btn-simple btn-sm hover-info" type="button" data-toggle="tooltip" data-placement="top" data-html="true" title="<b>Son güncelleme: </b>@Model.Menu.RecordUpdateInfo.ModifiedDate - @Model.Menu.RecordUpdateInfo.ModifiedUserEmail<br /><b>Oluşturma: </b>@Model.Menu.RecordUpdateInfo.CreatedDate - @Model.Menu.RecordUpdateInfo.CreatedUserEmail"><i class="far fa-clock" aria-hidden="true"></i> Tarih Bilgisi</button>
    </div>
</div>
@using (Html.BeginForm(ApplicationControllerActionNames.Edit, ControllerNames.Menu, FormMethod.Post, new { id = "menu-form" }))
{
    @Html.HiddenFor(x => x.Menu.Id)
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.Name, new { @class = "col-form-label" })
                @Html.TextBoxFor(x => x.Menu.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.ParentId, new { @class = "col-form-label" })
                @Html.DropDownListFor(x => x.Menu.ParentId, new SelectList(Model.MenuList, DropdownItemValue.Id, DropdownItemValue.Name), "Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.ParentId)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.Link, new { @class = "col-form-label" })
                @Html.TextBoxFor(x => x.Menu.Link, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.Link)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.Icon, new { @class = "col-form-label" })
                @Html.TextBoxFor(x => x.Menu.Icon, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.Icon)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.Order, new { @class = "col-form-label" })
                @Html.TextBoxFor(x => x.Menu.Order, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(x => x.Menu.Order)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.MenuGroupId, new { @class = "col-form-label" })
                @Html.DropDownListFor(x => x.Menu.MenuGroupId, new SelectList(Model.MenuGroups, DropdownItemValue.Id, DropdownItemValue.Name), "Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.MenuGroupId)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Menu.Description, new { @class = "col-form-label" })
                @Html.TextAreaFor(x => x.Menu.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Menu.Description)
            </div>
        </div>
    </div>
    <div class="py-3">
        <button type="submit" class="btn btn-success">Güncelle</button>
    </div>

}

@section Scripts{
    <script src="~/bundles/js/jquery-val.min.js" asp-append-version="true"></script>
}