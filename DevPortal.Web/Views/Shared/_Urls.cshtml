@using Newtonsoft.Json
@{
    IDictionary<string, string> urls = new Dictionary<string, string>();
    urls.Add("Add", Url.Action(ApplicationEnvironmentControllerActionNames.Add, ControllerNames.ApplicationEnvironment));
    urls.Add("GetApplicationEnvironments", Url.Action(ApplicationEnvironmentControllerActionNames.Index, ControllerNames.ApplicationEnvironment));
    urls.Add("Delete", Url.Action(ApplicationEnvironmentControllerActionNames.Delete, ControllerNames.ApplicationEnvironment));
    urls.Add("GetSvnRepositories", Url.Action(ApplicationSvnControllerActionNames.GetSvnRepositories, ControllerNames.ApplicationSvn));
    urls.Add("ExportSvnRepositoriesAsWiki", Url.Action(SvnAdminExportControllerActionNames.ExportAsWiki, ControllerNames.SvnAdminExport));
    urls.Add("ExportSvnRepositoriesAsWikiFile", Url.Action(SvnAdminExportControllerActionNames.ExportAsWikiFile, ControllerNames.SvnAdminExport));
    urls.Add("GetJenkinsJobs", Url.Action(ApplicationJenkinsJobControllerActionNames.GetJenkinsJobs, ControllerNames.ApplicationJenkinsJob));
    urls.Add("GetSonarqubeProjects", Url.Action(ApplicationSonarqubeProjectControllerActionNames.Index, ControllerNames.ApplicationSonarqubeProject));
    urls.Add("ExportApplicationAsCsv", Url.Action(ApplicationCsvExportControllerActionNames.ExportToCsv, ControllerNames.ApplicationCsvExport));
    urls.Add("ExportApplicationAsWiki", Url.Action(ApplicationWikiExportControllerActionNames.ExportAsWiki, ControllerNames.ApplicationWikiExport));
    urls.Add("ExportApplicationAsWikiFile", Url.Action(ApplicationWikiExportControllerActionNames.ExportAsWikiFile, ControllerNames.ApplicationWikiExport));
    urls.Add("GetNugetPackages", Url.Action(ApplicationNugetPackageControllerActionNames.Index, ControllerNames.ApplicationNugetPackage));
    urls.Add("DeleteDatabaseType", Url.Action(DatabaseTypeControllerActionNames.Delete, ControllerNames.DatabaseType));
    urls.Add("ExportDatabaseAsCsv", Url.Action(DatabaseExportControllerActionNames.ExportToCsv, ControllerNames.DatabaseExport));
    urls.Add("ExportDatabaseAsWiki", Url.Action(DatabaseExportControllerActionNames.ExportAsWiki, ControllerNames.DatabaseExport));
    urls.Add("ExportDatabaseAsWikiFile", Url.Action(DatabaseExportControllerActionNames.ExportAsWikiFile, ControllerNames.DatabaseExport));
    urls.Add("DeleteDatabaseGroup", Url.Action(DatabaseGroupControllerActionNames.Delete, ControllerNames.DatabaseGroup));
    urls.Add("GetDatabaseDependenciesByApplicationId", Url.Action(DependencyListControllerActionNames.GetDatabaseDependenciesByApplicationId, ControllerNames.DependencyList));
    urls.Add("GetApplicationDependenciesByApplicationId", Url.Action(DependencyListControllerActionNames.GetApplicationDependenciesByApplicationId, ControllerNames.DependencyList));
    urls.Add("GetNugetPackageDependenciesByApplicationId", Url.Action(DependencyListControllerActionNames.GetNugetPackageDependenciesByApplicationId, ControllerNames.DependencyList));
    urls.Add("GetExternalDependenciesByApplicationId", Url.Action(DependencyListControllerActionNames.GetExternalDependenciesByApplicationId, ControllerNames.DependencyList));
    urls.Add("DeleteDatabaseDependency", Url.Action(DatabaseDependencyControllerActionNames.Delete, ControllerNames.DatabaseDependency));
    urls.Add("DeleteApplicationDependency", Url.Action(ApplicationDependencyControllerActionNames.Delete, ControllerNames.ApplicationDependency));
    urls.Add("ExportDependenciesAsWiki", Url.Action(DependenciesExportControllerActionNames.ExportDependenciesAsWiki, ControllerNames.DependenciesExport));
    urls.Add("ExportDependenciesAsWikiFile", Url.Action(DependenciesExportControllerActionNames.ExportDependenciesAsWikiFile, ControllerNames.DependenciesExport));
    urls.Add("AddFavouritePage", Url.Action(FavouritesControllerActionNames.Add, ControllerNames.Favourites));
    urls.Add("GetFavouritePageByUserIdAndPageUrl", Url.Action(FavouritesControllerActionNames.GetFavouritePageByUserIdAndPageUrl, ControllerNames.Favourites));
    urls.Add("DeleteFavouritePage", Url.Action(FavouritesControllerActionNames.Delete, ControllerNames.Favourites));
    urls.Add("ApplicationRedmineProjects", Url.Action(RedmineControllerActionNames.Index, ControllerNames.Redmine));
    urls.Add("DatabaseRedmineProjects", Url.Action(RedmineControllerActionNames.DatabaseProjects, ControllerNames.Redmine));
    urls.Add("SortFavouritePage", Url.Action(FavouritesControllerActionNames.SortPages, ControllerNames.Favourites));
    urls.Add("FavouritePages", Url.Action(FavouritesControllerActionNames.Index, ControllerNames.Favourites));
    urls.Add("FavouritePagesPartial", Url.Action(FavouritesControllerActionNames.List, ControllerNames.Favourites));
    urls.Add("SortFavouritePages", Url.Action(FavouritesControllerActionNames.SortPages, ControllerNames.Favourites));
    urls.Add("GetNugetPackagesName", Url.Action(NugetControllerActionNames.GetFilteredNugetPackages, ControllerNames.NugetPackageDependency));
    urls.Add("GetNugetPackageRootUrl", Url.Action(NugetControllerActionNames.GetNugetPackageRootUrl, ControllerNames.NugetPackageDependency));
    urls.Add("DeleteNugetPackageDependency", Url.Action(NugetPackageDependencyControllerActionNames.Delete, ControllerNames.NugetPackageDependency));
    urls.Add("GetApplicationBuildSettings", Url.Action(ApplicationBuildSettingsControllerActionNames.GetApplicationBuildSettings, ControllerNames.ApplicationBuildSettings));

}
<script type="text/javascript">
    var Urls = @Html.Raw(JsonConvert.SerializeObject(urls));
</script>